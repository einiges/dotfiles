
# - Reload sxhkd -
super + Escape ; s
	pkill --signal SIGUSR1 sxhkd

super + @v
	sspaste 'primary' 'ctrl+v'


# -- application launching --

# - terminal
super + {_,shift} + Return
	$TERMINAL {_,-e tmux}

# - application launcher
super + @l
	rofi -show drun

# - pass
super + @x
	PINENTRY_USER_DATA=gtk passmenu-rofi | xargs -I '@' notify-send 'copied' '@'

super + {shift,ctrl} + l
	xautolock -{locknow,toggle}

# - screenshots
# * -u focused
# * -s interactive select
{_,super} + {_,shift} + @Print
	scrot {_,-e 'xclip -selection c -t image/png < $f'} {-u,-s} "$HOME/Pictures/Screenshots/%Y-%m-%d_%H:%M:%S.png" -q 100

# - Quick launch -
super + e ; super + {e,f,p}
	{pcmanfm,firefox,pavucontrol}


# -- media keys --

# - navigate playlist
XF86Audio{Play,Stop,Next,Prev}
	mpc -q {toggle,stop,next,prev}

# - volume (basic)
{_,shift} + XF86AudioMute
	amixer -qD pulse set {Master,Capture} toggle

{_,shift} + {_,control} + XF86Audio{Raise,Lower}Volume
	amixer -qD pulse set {Master,Capture} {3,7}%{+,-}




# --- bspwm ---

# quit bspwm
super + shift + Escape
	bspc quit

# reload config
super + Escape ; b
	bspwm-update

# close/kill node
super + {_,shift} + adiaeresis
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + f
	bspc desktop -l next

# force next node to spawn on current focused desktop
# press n times for the next n nodes
super + ctrl + Return
	bspc rule -a '*' -o "desktop=$(bspc query -D -d)"

# -- state/flags --

# Toggle states
super + {ctrl,shift,mod5} + f
	bspc node -t {\~floating,\~fullscreen,tiled}

super + s; {s,p}
	bspc node --flag {sticky,private}

# -- focus/swap

# focus desktop when available on current desktop
# otherwise swap
super + {1-5,8,9,0}
	d='{1-5,8,9,10}'; \
	bspc desktop -f "$d.local" || bspc desktop -s "$d"

# send node to desktops, use preselected area if available
super + shift + {1-5,8,9,0}
	d='{1-5,8,9,10}'; \
	bspc node -n "@${d}:.\!automatic" || bspc node -d "${d}"

# swap node
super + shift + {n,r,t,d}
	{ d=west  x=-50 y=0 \
	, d=south x=0   y=35 \
	, d=north x=0   y=-35 \
	, d=east  x=50  y=0 \
	}; \
	bspc node -v "$x" "$y" || bspc node -s $d.local

# focus node in direction
super + {n,r,t,d}
	m='.local.!hidden.window'; \
	{ d=west  o=next \
	, d=south o=prev \
	, d=north o=next \
	, d=east  o=prev \
	}; \
	bspc query -D -d focused.tiled && bspc node -f "$d$m" || bspc node -f "$o$m"

# Flip layout
super + {_,shift} + m
	bspc node @/ -F {vertical,horizontal}

# Rotate Layout
super + {_,shift} + b
	bspc node @/ -R {90,270}


# -- Resize --

# Increase window size
super + ctrl + {n,r,t,d}
	bspc node -z {left -50 0,bottom 0  35,top 0 -35,right  50 0}

# Decrease window size
super + alt + {n,r,t,d}
	bspc node -z {left  50 0,bottom 0 -35,top 0  35,right -50 0}


# -- preselect --

# preselect the direction
super + mod5 + {n,r}
	d='~{east,south}'; \
	bspc query -N -n 'focused.automatic' && bspc node -p "$d" || bspc-presel-mirrored "$d"

# move to preselcted area with weight: local > active > {other}
super + mod5 + space
	bspc node -n 'any.!automatic.local' || bspc node -n 'any.!automatic.active' || bspc node -n 'any.!automatic'


# -- monitors --

# focus next monitor
super + g
	bspc monitor -f next

# send node to next monitor, use preselect area if available
super + shift + g
	bspc node -n 'next.!automatic.active' || bspc node -m next

# swap current desktop with focused desktop of next monitor
super + {_,shift} + dead_circumflex
	bspc desktop -s next:focused {_,--follow}


