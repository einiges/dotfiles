
[init]
	defaultBranch = main

[core]
	autocrlf = input

[merge]
	tool = nvimdiff
	ff = false

[mergetool]
	prompt = false

[pull]
	rebase = true
	ff = true

[push]
	default = current

[rebase]
	autosquash = true
	autostash = true
	verbose = true
	abbreviateCommands = true

[diff]
	tool = nvimdiff

[difftool]
	prompt = false

[blame]
	date = human

[alias]
	a = add
	b = branch
	branches = branch -a
	bd = branch -d
	bdd = branch -D
	c = commit
	cm = commit -m
	reword = commit --amend
	diff-prev = "!f() { git diff ${@:2} ${1:-HEAD}^ ${1:-HEAD}; }; f"
	diffs = diff --staged
	exec = "!exec "
	fix = "!f() { git commit ${@:2} --fixup=${1:-@}; }; f"
	fixl = commit --amend --no-edit
	lg = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(green)(%ar)%C(reset) %C(white)%s%C(reset) %C(yellow)- %an%C(reset)%C(bold yellow)%d%C(reset)'
	lgg = log --graph --abbrev-commit --decorate --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n        %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
	m = merge
	ma = merge --abort
	mc = merge --continue
	mt = mergetool
	pushf = push --force-with-lease
	r = rebase
	ra = rebase --abort
	rc = rebase --continue
	remotes = remote -v
	root = rev-parse --show-toplevel
	squash = "!f() { defaultBranch=$(git config init.defaultBranch); mergebase=$(git merge-base @ ${1:-$defaultBranch}); git rebase -i --autosquash ${@:2} ${mergebase}; }; f"
	st = status
	sw = switch
	swc = switch -c
	swd = switch --detach
	main = !git switch $(git config init.defaultBranch)
	u = restore
	versions = tag --list --sort=-version:refname --format='%(color:bold blue)%(refname:strip=2)%(color:reset)%(if)%(taggerdate)%(then) - %(color:green)%(taggerdate)%(color:reset)%(end)%(if)%(taggername)%(then) - %(color:yellow)%(taggername)%(color:reset)%(end)' 'v*'
	xxx = push -d origin

[include]
	path = alternative.config

