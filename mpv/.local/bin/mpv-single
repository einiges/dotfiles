#!/usr/bin/env bash

check_requirements()
{
	local requirements=(
		xdotool
		socat
		mpv
	)
	local cmd
	for cmd in "${requirements[@]}"
	do
		command -v "$cmd" >/dev/null
		if (( $? != 0 ))
		then
			printf 'At least one of the required programs (%s) is not installed\n' \
				"${requirements[*]}"
			return 1
		fi
	done
}

check_requirements || exit 1



SOCKET="${MPV_SINGLE_SOCKET:-${XDG_RUNTIME_DIR}/mpv-single}"
INSTANCE_NAME='single'

main()
{
	local instance_running

	/usr/bin/xdotool \
		search --name "$INSTANCE_NAME" \
		search --class mpv \
		>/dev/null
	instance_running=$?

	if [ $instance_running -eq 0 -a -S "$SOCKET" ]; then
		play_in_existing_instance "$@"
	else
		play_in_new_instance "$@"
	fi
}

command_play_now()
{
	/usr/bin/printf '{ "command": [ "loadfile", "%s" ] }\n' "$1" | \
		/usr/bin/socat - "$SOCKET" >/dev/null
}

command_play_later()
{
	/usr/bin/printf '{ "command": [ "loadfile", "%s", "append"] }\n' "$@" | \
		/usr/bin/socat - "$SOCKET" >/dev/null
}

play_in_existing_instance()
{
	command='command_play_now'
	while [ "$#" -gt 0 ]; do
		file="$1"
		shift

		file="$(/bin/realpath -e -q -- "$file")" || continue

		"$command" "$file"
		command='command_play_later'
	done
}

play_in_new_instance()
{
	/usr/bin/nohup \
		/usr/bin/mpv \
		--no-terminal \
		--input-ipc-server="$SOCKET" \
		--x11-name="$INSTANCE_NAME" \
		-- \
		"$@" \
		>/dev/null 2>&1 &
}

main "$@"

